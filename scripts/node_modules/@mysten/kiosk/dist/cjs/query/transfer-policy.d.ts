import type { SuiClient } from '@mysten/sui.js/client';
import type { TransferPolicy, TransferPolicyCap } from '../types/index.js';
/**
 * Searches the `TransferPolicy`-s for the given type. The seach is performed via
 * the `TransferPolicyCreated` event. The policy can either be owned or shared,
 * and the caller needs to filter the results accordingly (ie single owner can not
 * be accessed by anyone but the owner).
 *
 * @param provider
 * @param type
 */
export declare function queryTransferPolicy(client: SuiClient, type: string): Promise<TransferPolicy[]>;
/**
 * A function to fetch all the user's kiosk Caps
 * And a list of the kiosk address ids.
 * Returns a list of `kioskOwnerCapIds` and `kioskIds`.
 * Extra options allow pagination.
 * @returns TransferPolicyCap Object ID | undefined if not found.
 */
export declare function queryTransferPolicyCapsByType(client: SuiClient, address: string, type: string): Promise<TransferPolicyCap[]>;
/**
 * A function to fetch all the user's kiosk Caps
 * And a list of the kiosk address ids.
 * Returns a list of `kioskOwnerCapIds` and `kioskIds`.
 * Extra options allow pagination.
 * @returns TransferPolicyCap Object ID | undefined if not found.
 */
export declare function queryOwnedTransferPolicies(client: SuiClient, address: string): Promise<TransferPolicyCap[] | undefined>;
