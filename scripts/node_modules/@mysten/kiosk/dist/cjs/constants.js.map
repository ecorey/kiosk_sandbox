{
  "version": 3,
  "sources": ["../../src/constants.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// eslint-disable-next-line import/no-cycle\nimport {\n\tresolveFloorPriceRule,\n\tresolveKioskLockRule,\n\tresolvePersonalKioskRule,\n\tresolveRoyaltyRule,\n} from './tx/rules//resolve.js';\nimport { Network } from './types/index.js';\nimport type { ObjectArgument, RuleResolvingParams } from './types/index.js';\n\n/**\n * The base rule package ids that can be extended\n */\nexport type BaseRulePackageIds = {\n\troyaltyRulePackageId?: string;\n\tkioskLockRulePackageId?: string;\n\tpersonalKioskRulePackageId?: string;\n\tfloorPriceRulePackageId?: string;\n};\n\n/**\n * The Transfer Policy rule.\n */\nexport type TransferPolicyRule = {\n\trule: string;\n\tpackageId: string;\n\tresolveRuleFunction: (rule: RuleResolvingParams) => ObjectArgument | void;\n\thasLockingRule?: boolean;\n};\n\nexport const ROYALTY_RULE_ADDRESS: Record<Network, string> = {\n\t[Network.TESTNET]: 'bd8fc1947cf119350184107a3087e2dc27efefa0dd82e25a1f699069fe81a585',\n\t[Network.MAINNET]: '0x434b5bd8f6a7b05fede0ff46c6e511d71ea326ed38056e3bcd681d2d7c2a7879',\n\t[Network.CUSTOM]: '',\n};\n\nexport const KIOSK_LOCK_RULE_ADDRESS: Record<Network, string> = {\n\t[Network.TESTNET]: 'bd8fc1947cf119350184107a3087e2dc27efefa0dd82e25a1f699069fe81a585',\n\t[Network.MAINNET]: '0x434b5bd8f6a7b05fede0ff46c6e511d71ea326ed38056e3bcd681d2d7c2a7879',\n\t[Network.CUSTOM]: '',\n};\n\nexport const FLOOR_PRICE_RULE_ADDRESS: Record<Network, string> = {\n\t[Network.TESTNET]: '0x06f6bdd3f2e2e759d8a4b9c252f379f7a05e72dfe4c0b9311cdac27b8eb791b1',\n\t[Network.MAINNET]: '0x34cc6762780f4f6f153c924c0680cfe2a1fb4601e7d33cc28a92297b62de1e0e',\n\t[Network.CUSTOM]: '',\n};\n\nexport const PERSONAL_KIOSK_RULE_ADDRESS: Record<Network, string> = {\n\t[Network.TESTNET]: '0x06f6bdd3f2e2e759d8a4b9c252f379f7a05e72dfe4c0b9311cdac27b8eb791b1',\n\t[Network.MAINNET]: '0x0cb4bcc0560340eb1a1b929cabe56b33fc6449820ec8c1980d69bb98b649b802',\n\t[Network.CUSTOM]: '',\n};\n\n/**\n * Constructs a list of rule resolvers based on the params.\n */\nexport function getBaseRules({\n\troyaltyRulePackageId,\n\tkioskLockRulePackageId,\n\tpersonalKioskRulePackageId,\n\tfloorPriceRulePackageId,\n}: BaseRulePackageIds): TransferPolicyRule[] {\n\tconst rules = [];\n\n\tif (royaltyRulePackageId) {\n\t\trules.push({\n\t\t\trule: `${royaltyRulePackageId}::royalty_rule::Rule`,\n\t\t\tpackageId: royaltyRulePackageId,\n\t\t\tresolveRuleFunction: resolveRoyaltyRule,\n\t\t});\n\t}\n\n\tif (kioskLockRulePackageId) {\n\t\trules.push({\n\t\t\trule: `${kioskLockRulePackageId}::kiosk_lock_rule::Rule`,\n\t\t\tpackageId: kioskLockRulePackageId,\n\t\t\tresolveRuleFunction: resolveKioskLockRule,\n\t\t\thasLockingRule: true,\n\t\t});\n\t}\n\n\tif (personalKioskRulePackageId) {\n\t\trules.push({\n\t\t\trule: `${personalKioskRulePackageId}::personal_kiosk_rule::Rule`,\n\t\t\tpackageId: personalKioskRulePackageId,\n\t\t\tresolveRuleFunction: resolvePersonalKioskRule,\n\t\t});\n\t}\n\n\tif (floorPriceRulePackageId) {\n\t\trules.push({\n\t\t\trule: `${floorPriceRulePackageId}::floor_price_rule::Rule`,\n\t\t\tpackageId: floorPriceRulePackageId,\n\t\t\tresolveRuleFunction: resolveFloorPriceRule,\n\t\t});\n\t}\n\n\treturn rules;\n}\n\n// A list of testnet's base rules.\nexport const testnetRules: TransferPolicyRule[] = getBaseRules({\n\troyaltyRulePackageId: ROYALTY_RULE_ADDRESS[Network.TESTNET],\n\tkioskLockRulePackageId: KIOSK_LOCK_RULE_ADDRESS[Network.TESTNET],\n\tpersonalKioskRulePackageId: PERSONAL_KIOSK_RULE_ADDRESS[Network.TESTNET],\n\tfloorPriceRulePackageId: FLOOR_PRICE_RULE_ADDRESS[Network.TESTNET],\n});\n\n// A list of mainnet's base rules.\nexport const mainnetRules: TransferPolicyRule[] = getBaseRules({\n\troyaltyRulePackageId: ROYALTY_RULE_ADDRESS[Network.MAINNET],\n\tkioskLockRulePackageId: KIOSK_LOCK_RULE_ADDRESS[Network.MAINNET],\n});\n\nexport const rules: TransferPolicyRule[] = [...testnetRules, ...mainnetRules];\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,qBAKO;AACP,mBAAwB;AAuBjB,MAAM,uBAAgD;AAAA,EAC5D,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,MAAM,GAAG;AACnB;AAEO,MAAM,0BAAmD;AAAA,EAC/D,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,MAAM,GAAG;AACnB;AAEO,MAAM,2BAAoD;AAAA,EAChE,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,MAAM,GAAG;AACnB;AAEO,MAAM,8BAAuD;AAAA,EACnE,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,OAAO,GAAG;AAAA,EACnB,CAAC,qBAAQ,MAAM,GAAG;AACnB;AAKO,SAAS,aAAa;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAA6C;AAC5C,QAAMA,SAAQ,CAAC;AAEf,MAAI,sBAAsB;AACzB,IAAAA,OAAM,KAAK;AAAA,MACV,MAAM,GAAG;AAAA,MACT,WAAW;AAAA,MACX,qBAAqB;AAAA,IACtB,CAAC;AAAA,EACF;AAEA,MAAI,wBAAwB;AAC3B,IAAAA,OAAM,KAAK;AAAA,MACV,MAAM,GAAG;AAAA,MACT,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,IACjB,CAAC;AAAA,EACF;AAEA,MAAI,4BAA4B;AAC/B,IAAAA,OAAM,KAAK;AAAA,MACV,MAAM,GAAG;AAAA,MACT,WAAW;AAAA,MACX,qBAAqB;AAAA,IACtB,CAAC;AAAA,EACF;AAEA,MAAI,yBAAyB;AAC5B,IAAAA,OAAM,KAAK;AAAA,MACV,MAAM,GAAG;AAAA,MACT,WAAW;AAAA,MACX,qBAAqB;AAAA,IACtB,CAAC;AAAA,EACF;AAEA,SAAOA;AACR;AAGO,MAAM,eAAqC,aAAa;AAAA,EAC9D,sBAAsB,qBAAqB,qBAAQ,OAAO;AAAA,EAC1D,wBAAwB,wBAAwB,qBAAQ,OAAO;AAAA,EAC/D,4BAA4B,4BAA4B,qBAAQ,OAAO;AAAA,EACvE,yBAAyB,yBAAyB,qBAAQ,OAAO;AAClE,CAAC;AAGM,MAAM,eAAqC,aAAa;AAAA,EAC9D,sBAAsB,qBAAqB,qBAAQ,OAAO;AAAA,EAC1D,wBAAwB,wBAAwB,qBAAQ,OAAO;AAChE,CAAC;AAEM,MAAM,QAA8B,CAAC,GAAG,cAAc,GAAG,YAAY;",
  "names": ["rules"]
}
