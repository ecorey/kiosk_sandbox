import { Network } from './types/index.js';
import type { ObjectArgument, RuleResolvingParams } from './types/index.js';
/**
 * The base rule package ids that can be extended
 */
export type BaseRulePackageIds = {
    royaltyRulePackageId?: string;
    kioskLockRulePackageId?: string;
    personalKioskRulePackageId?: string;
    floorPriceRulePackageId?: string;
};
/**
 * The Transfer Policy rule.
 */
export type TransferPolicyRule = {
    rule: string;
    packageId: string;
    resolveRuleFunction: (rule: RuleResolvingParams) => ObjectArgument | void;
    hasLockingRule?: boolean;
};
export declare const ROYALTY_RULE_ADDRESS: Record<Network, string>;
export declare const KIOSK_LOCK_RULE_ADDRESS: Record<Network, string>;
export declare const FLOOR_PRICE_RULE_ADDRESS: Record<Network, string>;
export declare const PERSONAL_KIOSK_RULE_ADDRESS: Record<Network, string>;
/**
 * Constructs a list of rule resolvers based on the params.
 */
export declare function getBaseRules({ royaltyRulePackageId, kioskLockRulePackageId, personalKioskRulePackageId, floorPriceRulePackageId, }: BaseRulePackageIds): TransferPolicyRule[];
export declare const testnetRules: TransferPolicyRule[];
export declare const mainnetRules: TransferPolicyRule[];
export declare const rules: TransferPolicyRule[];
