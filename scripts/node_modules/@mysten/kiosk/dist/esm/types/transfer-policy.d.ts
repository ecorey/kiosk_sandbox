import type { ObjectOwner } from '@mysten/sui.js/client';
import type { TransactionBlock, TransactionObjectArgument } from '@mysten/sui.js/transactions';
import type { ObjectArgument } from './index.js';
/** The Transfer Policy module. */
export declare const TRANSFER_POLICY_MODULE = "0x2::transfer_policy";
/** Name of the event emitted when a TransferPolicy for T is created. */
export declare const TRANSFER_POLICY_CREATED_EVENT = "0x2::transfer_policy::TransferPolicyCreated";
/** The Transfer Policy Type */
export declare const TRANSFER_POLICY_TYPE = "0x2::transfer_policy::TransferPolicy";
/** The Transfer Policy Cap Type */
export declare const TRANSFER_POLICY_CAP_TYPE = "0x2::transfer_policy::TransferPolicyCap";
/** The Kiosk Lock Rule */
export declare const KIOSK_LOCK_RULE = "kiosk_lock_rule::Rule";
/** The Royalty rule */
export declare const ROYALTY_RULE = "royalty_rule::Rule";
/**
 * The Transfer Policy Cap in a consumable way.
 */
export type TransferPolicyCap = {
    policyId: string;
    policyCapId: string;
    type: string;
};
/** The `TransferPolicy` object */
export type TransferPolicy = {
    id: string;
    type: string;
    balance: string;
    rules: string[];
    owner: ObjectOwner;
};
/** Event emitted when a TransferPolicy is created. */
export type TransferPolicyCreated = {
    id: string;
};
export type RuleResolvingParams = {
    transactionBlock: TransactionBlock;
    itemType: string;
    itemId: string;
    price: string;
    policyId: ObjectArgument;
    sellerKiosk: ObjectArgument;
    kiosk: ObjectArgument;
    kioskCap: ObjectArgument;
    transferRequest: TransactionObjectArgument;
    purchasedItem: TransactionObjectArgument;
    packageId: string;
    extraArgs: Record<string, any>;
};
